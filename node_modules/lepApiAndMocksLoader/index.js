/**
 * Helper module for Mocha-testing the lep-API.
 *
 * Reads, then executes the lep-API and all mock JS-files in the current node context,
 * so anything defined inside the files will be availbable within Mocha tests.
 *
 * Author: Lennart Pegel - https://github.com/justlep/bitwig
 * License: LGPLv3 (http://www.gnu.org/licenses/lgpl-3.0.txt)
 *
 * Example:
 * $ require('lepApiAndMocksLoader');
 * $ lep.util.formatString('hallo {}', 'du');
 *
 * (Used Mocha to avoid the overhead of PhantomJS-based test runners like Karma & co)
 */

'use strict';

var LEP_API_BASE_PATH = 'src/lep/',
    fs = require('fs'),
    vm = require('vm'),
    grunt = require('grunt'),
    apiLoaderJs = fs.readFileSync(LEP_API_BASE_PATH + 'api.js', 'utf8'),
    mockFiles = grunt.file.expand({filter: 'isFile'}, 'test/mocks/**/*.js');

// load lep API
apiLoaderJs.replace(/^load.'([^']*)'./gm, function (fullMatch, relativeJSFilePath) {
    var jsFilePathFromRoot = LEP_API_BASE_PATH + relativeJSFilePath;
    console.log('# Loading LeP API file: ' + jsFilePathFromRoot);
    vm.runInThisContext(fs.readFileSync(jsFilePathFromRoot));
});

// load bitwig api mocks
for (var i = 0; i < mockFiles.length; i++) {
    console.log('# Loading Bitwig API mock file: ' + mockFiles[i]);
    vm.runInThisContext(fs.readFileSync(mockFiles[i]));
}
