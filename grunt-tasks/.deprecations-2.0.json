{
  "bitwigVersion": "2.0",
  "shortNames": [
    "addDisplayProfileObserver",
    "addHasActiveEngineObserver",
    "addPanelLayoutObserver",
    "addProjectNameObserver",
    "addSelectedModeObserver",
    "nextPerspective",
    "previousPerspective",
    "setPerspective",
    "addCueMarkerVisibilityObserver",
    "addPlaybackFollowObserver",
    "addTrackRowHeightObserver",
    "toggleCueMarkerVisibility",
    "togglePlaybackFollow",
    "toggleTrackRowHeight",
    "addRawValueObserver",
    "addTimeObserver",
    "addIsBrowsingObserver",
    "addEntryCountObserver",
    "addNameObserver",
    "addHitCountObserver",
    "addExistsObserver",
    "addValueObserver",
    "addHitCountObserver",
    "addIsAvailableObserver",
    "addCanScrollDownObserver",
    "addCanScrollUpObserver",
    "addEntryCountObserver",
    "addScrollPositionObserver",
    "scrollDown",
    "scrollPageDown",
    "scrollPageUp",
    "scrollUp",
    "addColorObserver",
    "addNoteObserver",
    "getSend",
    "addCanScrollChannelsDownObserver",
    "addCanScrollChannelsUpObserver",
    "addCanScrollSendsDownObserver",
    "addCanScrollSendsUpObserver",
    "addChannelCountObserver",
    "addChannelScrollPositionObserver",
    "addSendCountObserver",
    "scrollSendsDown",
    "scrollSendsPageDown",
    "scrollSendsPageUp",
    "scrollSendsUp",
    "scrollToSend",
    "addCanScrollKeysDownObserver",
    "addCanScrollKeysUpObserver",
    "addCanScrollStepsBackwardsObserver",
    "addCanScrollStepsForwardObserver",
    "addColorObserver",
    "addPlayingStepObserver",
    "addIsQueuedObserver",
    "addCanSelectPreviousObserver",
    "addHasSelectedDeviceObserver",
    "addIsEnabledObserver",
    "addIsPluginObserver",
    "addNameObserver",
    "addPositionObserver",
    "addPresetCategoriesObserver",
    "addPresetCategoryObserver",
    "addPresetCreatorObserver",
    "addPresetCreatorsObserver",
    "addPresetNameObserver",
    "addPresetNamesObserver",
    "addSampleNameObserver",
    "addSlotsObserver",
    "getCommonParameter",
    "getEnvelopeParameter",
    "getMacro",
    "getModulationSource",
    "getParameter",
    "isMacroSectionVisible",
    "isParameterPageSectionVisible",
    "loadPreset",
    "setPresetCategory",
    "setPresetCreator",
    "switchToNextPreset",
    "switchToNextPresetCategory",
    "switchToNextPresetCreator",
    "switchToPreviousPreset",
    "switchToPreviousPresetCategory",
    "switchToPreviousPresetCreator",
    "toggleEnabledState",
    "addCanScrollUpObserver",
    "addDeviceCountObserver",
    "addScrollPositionObserver",
    "addIsSelectedObserver",
    "addNameObserver",
    "select",
    "html#a816b1d21f18ee06b888cf57b3bee415c\">Channel#selectInMixer()",
    "addNameObserver",
    "createApplicationSection",
    "createArrangerSection",
    "createCursorClip",
    "createCursorClipSection",
    "createCursorDevice",
    "createCursorDeviceSection",
    "createCursorTrackSection",
    "createEditorCursorDevice",
    "createEffectTrackBankSection",
    "createGrooveSection",
    "createMainTrackBankSection",
    "createMasterTrackSection",
    "createMixerSection",
    "createTrackBankSection",
    "createTransportSection",
    "createUserControlsSection",
    "defineController",
    "defineSysexDiscovery",
    "defineSysexIdentityReply",
    "scheduleTask",
    "setShouldSendMidiBeatClock",
    "addClipLauncherSectionVisibilityObserver",
    "addCrossFadeSectionVisibilityObserver",
    "addDeviceSectionVisibilityObserver",
    "addIoSectionVisibilityObserver",
    "addMeterSectionVisibilityObserver",
    "addSendsSectionVisibilityObserver",
    "toggleClipLauncherSectionVisibility",
    "toggleCrossFadeSectionVisibility",
    "toggleDeviceSectionVisibility",
    "toggleIoSectionVisibility",
    "toggleMeterSectionVisibility",
    "toggleSendsSectionVisibility",
    "addIsMappedObserver",
    "addIsMappingObserver",
    "addNameObserver",
    "addColorObserver",
    "addNameObserver",
    "addNoteValueObserver",
    "addNameObserver",
    "addValueDisplayObserver",
    "addCanSwitchToDeviceObserver</a>  (<a class=\"el\" href=\"a00062.html\">DeviceType</a> deviceType, <a class=\"el\" href=\"a00027.html\">ChainLocation",
    "addClipCountObserver",
    "addPositionObserver",
    "getName",
    "addCanScrollDownObserver",
    "addCanScrollUpObserver",
    "addSceneCountObserver",
    "addScrollPositionObserver",
    "scrollDown",
    "scrollPageDown",
    "scrollPageUp",
    "scrollTo",
    "scrollUp",
    "incRaw",
    "setRaw",
    "addIsGroupObserver",
    "addIsQueuedForStopObserver",
    "addPositionObserver",
    "addTrackTypeObserver",
    "getClipLauncher",
    "getClipLauncherSlots",
    "getIsMatrixQueuedForStop",
    "getIsMatrixStopped",
    "getPrimaryDevice",
    "getPrimaryInstrument",
    "addCanScrollScenesDownObserver",
    "addCanScrollScenesUpObserver",
    "addCanScrollTracksDownObserver",
    "addCanScrollTracksUpObserver",
    "addSceneCountObserver",
    "addTrackScrollPositionObserver",
    "getClipLauncherScenes",
    "getTrack",
    "launchScene",
    "scrollScenesPageUp",
    "scrollToTrack",
    "scrollTracksDown",
    "scrollTracksPageDown",
    "scrollTracksPageUp",
    "scrollTracksUp",
    "setTrackScrollStepSize",
    "addAutomationOverrideObserver",
    "addAutomationWriteModeObserver",
    "addClickObserver",
    "addClipLauncherPostRecordingActionObserver",
    "addIsLoopActiveObserver",
    "addIsPlayingObserver",
    "addIsRecordingObserver",
    "addIsWritingArrangerAutomationObserver",
    "addIsWritingClipLauncherAutomationObserver",
    "addLauncherOverdubObserver",
    "addMetronomeTicksObserver",
    "addMetronomeVolumeObserver",
    "addOverdubObserver",
    "addPreRollClickObserver",
    "addPreRollObserver",
    "addPunchInObserver",
    "addPunchOutObserver",
    "getTempo",
    "setAutomationWriteMode",
    "setClick",
    "setClipLauncherPostRecordingAction",
    "setLauncherOverdub",
    "setLoop",
    "setMetronomeValue",
    "setOverdub",
    "setPreRoll",
    "toggleClick",
    "toggleLauncherOverdub",
    "toggleLoop",
    "toggleMetronomeDuringPreRoll",
    "toggleMetronomeTicks",
    "toggleOverdub",
    "togglePunchIn",
    "togglePunchOut"
  ],
  "fullNames": [
    "Application.addDisplayProfileObserver(StringValueChangedCallback callable, int maxChars)",
    "Application.addHasActiveEngineObserver(BooleanValueChangedCallback callable)",
    "Application.addPanelLayoutObserver(StringValueChangedCallback callable, int maxChars)",
    "Application.addProjectNameObserver(StringValueChangedCallback callback, int maxChars)",
    "Application.addSelectedModeObserver(StringValueChangedCallback callable, int maxChars, String fallbackText)",
    "Application.nextPerspective()",
    "Application.previousPerspective()",
    "Application.setPerspective(String perspective)",
    "Arranger.addCueMarkerVisibilityObserver(BooleanValueChangedCallback callback)",
    "Arranger.addPlaybackFollowObserver(BooleanValueChangedCallback callback)",
    "Arranger.addTrackRowHeightObserver(BooleanValueChangedCallback callback)",
    "Arranger.toggleCueMarkerVisibility()",
    "Arranger.togglePlaybackFollow()",
    "Arranger.toggleTrackRowHeight()",
    "BeatTimeValue.addRawValueObserver(DoubleValueChangedCallback callback)",
    "BeatTimeValue.addTimeObserver(String separator, int barsLen, int beatsLen, int subdivisionLen, int ticksLen, StringValueChangedCallback callback)",
    "Browser.addIsBrowsingObserver(BooleanValueChangedCallback callback)",
    "BrowserColumn.addEntryCountObserver(IntegerValueChangedCallback callback)",
    "BrowserFilterColumn.addNameObserver(int maxCharacters, String textWhenUnassigned, StringValueChangedCallback callback)",
    "BrowserFilterItem.addHitCountObserver(IntegerValueChangedCallback callback)",
    "BrowserItem.addExistsObserver(BooleanValueChangedCallback callback)",
    "BrowserItem.addValueObserver(int maxCharacters, String textWhenUnassigned, StringValueChangedCallback callback)",
    "BrowsingSession.addHitCountObserver(IntegerValueChangedCallback callback)",
    "BrowsingSession.addIsAvailableObserver(BooleanValueChangedCallback callback)",
    "BrowsingSessionBank.addCanScrollDownObserver(BooleanValueChangedCallback callback)",
    "BrowsingSessionBank.addCanScrollUpObserver(BooleanValueChangedCallback callback)",
    "BrowsingSessionBank.addEntryCountObserver(IntegerValueChangedCallback callback)",
    "BrowsingSessionBank.addScrollPositionObserver(IntegerValueChangedCallback callback)",
    "BrowsingSessionBank.scrollDown()",
    "BrowsingSessionBank.scrollPageDown()",
    "BrowsingSessionBank.scrollPageUp()",
    "BrowsingSessionBank.scrollUp()",
    "Channel.addColorObserver(ColorValueChangedCallback callback)",
    "Channel.addNoteObserver(NotePlaybackCallback callback)",
    "Channel.getSend(int index)",
    "ChannelBank&lt; ChannelType extends Channel &gt;.addCanScrollChannelsDownObserver(BooleanValueChangedCallback callback)",
    "ChannelBank&lt; ChannelType extends Channel &gt;.addCanScrollChannelsUpObserver(BooleanValueChangedCallback callback)",
    "ChannelBank&lt; ChannelType extends Channel &gt;.addCanScrollSendsDownObserver(BooleanValueChangedCallback callback)",
    "ChannelBank&lt; ChannelType extends Channel &gt;.addCanScrollSendsUpObserver(BooleanValueChangedCallback callback)",
    "ChannelBank&lt; ChannelType extends Channel &gt;.addChannelCountObserver(IntegerValueChangedCallback callback)",
    "ChannelBank&lt; ChannelType extends Channel &gt;.addChannelScrollPositionObserver(IntegerValueChangedCallback callback, int valueWhenUnassigned)",
    "ChannelBank&lt; ChannelType extends Channel &gt;.addSendCountObserver(IntegerValueChangedCallback callback)",
    "ChannelBank&lt; ChannelType extends Channel &gt;.scrollSendsDown()",
    "ChannelBank&lt; ChannelType extends Channel &gt;.scrollSendsPageDown()",
    "ChannelBank&lt; ChannelType extends Channel &gt;.scrollSendsPageUp()",
    "ChannelBank&lt; ChannelType extends Channel &gt;.scrollSendsUp()",
    "ChannelBank&lt; ChannelType extends Channel &gt;.scrollToSend(int position)",
    "Clip.addCanScrollKeysDownObserver(BooleanValueChangedCallback callback)",
    "Clip.addCanScrollKeysUpObserver(BooleanValueChangedCallback callback)",
    "Clip.addCanScrollStepsBackwardsObserver(BooleanValueChangedCallback callback)",
    "Clip.addCanScrollStepsForwardObserver(BooleanValueChangedCallback callback)",
    "Clip.addColorObserver(ColorValueChangedCallback callback)",
    "Clip.addPlayingStepObserver(IntegerValueChangedCallback callback)",
    "ClipLauncherSlotBank.addIsQueuedObserver(IndexedBooleanValueChangedCallback callback)",
    "Cursor.addCanSelectPreviousObserver(BooleanValueChangedCallback callback)",
    "Device.addHasSelectedDeviceObserver(BooleanValueChangedCallback callback)",
    "Device.addIsEnabledObserver(BooleanValueChangedCallback callback)",
    "Device.addIsPluginObserver(BooleanValueChangedCallback callback)",
    "Device.addNameObserver(int len, String textWhenUnassigned, StringValueChangedCallback callback)",
    "Device.addPositionObserver(IntegerValueChangedCallback callback)",
    "Device.addPresetCategoriesObserver(StringArrayValueChangedCallback callback)",
    "Device.addPresetCategoryObserver(int len, String textWhenUnassigned, StringValueChangedCallback callback)",
    "Device.addPresetCreatorObserver(int len, String textWhenUnassigned, StringValueChangedCallback callback)",
    "Device.addPresetCreatorsObserver(StringArrayValueChangedCallback callback)",
    "Device.addPresetNameObserver(int len, String textWhenUnassigned, StringValueChangedCallback callback)",
    "Device.addPresetNamesObserver(StringArrayValueChangedCallback callback)",
    "Device.addSampleNameObserver(int maxChars, String textWhenUnassigned, StringValueChangedCallback callback)",
    "Device.addSlotsObserver(StringArrayValueChangedCallback callback)",
    "Device.getCommonParameter(int index)",
    "Device.getEnvelopeParameter(int index)",
    "Device.getMacro(int index)",
    "Device.getModulationSource(int index)",
    "Device.getParameter(int indexInPage)",
    "Device.isMacroSectionVisible()",
    "Device.isParameterPageSectionVisible()",
    "Device.loadPreset(int index)",
    "Device.setPresetCategory(int index)",
    "Device.setPresetCreator(int index)",
    "Device.switchToNextPreset()",
    "Device.switchToNextPresetCategory()",
    "Device.switchToNextPresetCreator()",
    "Device.switchToPreviousPreset()",
    "Device.switchToPreviousPresetCategory()",
    "Device.switchToPreviousPresetCreator()",
    "Device.toggleEnabledState()",
    "DeviceBank.addCanScrollUpObserver(BooleanValueChangedCallback callback)",
    "DeviceBank.addDeviceCountObserver(IntegerValueChangedCallback callback)",
    "DeviceBank.addScrollPositionObserver(IntegerValueChangedCallback callback, int valueWhenUnassigned)",
    "DeviceChain.addIsSelectedObserver(BooleanValueChangedCallback callback)",
    "DeviceChain.addNameObserver(int numChars, String textWhenUnassigned, StringValueChangedCallback callback)",
    "DeviceChain.select()",
    "selectInEditor()</a> or <a class=\"el\" href=\"a00028.html#a816b1d21f18ee06b888cf57b3bee415c\">Channel#selectInMixer()instead. ",
    "GenericBrowsingSession.addNameObserver(int maxCharacters, String textWhenUnassigned, StringValueChangedCallback callback)",
    "Host.createApplicationSection()",
    "Host.createArrangerSection(final int screenIndex)",
    "Host.createCursorClip(final int gridWidth, final int gridHeight)",
    "Host.createCursorClipSection(final int gridWidth, final int gridHeight)",
    "Host.createCursorDevice()",
    "Host.createCursorDeviceSection(final int numControllers)",
    "Host.createCursorTrackSection(final int numSends, final int numScenes)",
    "Host.createEditorCursorDevice()",
    "Host.createEffectTrackBankSection(final int numTracks, final int numScenes)",
    "Host.createGrooveSection()",
    "Host.createMainTrackBankSection(final int numTracks, final int numSends, final int numScenes)",
    "Host.createMasterTrackSection(final int numScenes)",
    "Host.createMixerSection(final String perspective, final int screenIndex)",
    "Host.createTrackBankSection(final int numTracks, final int numSends, final int numScenes)",
    "Host.createTransportSection()",
    "Host.createUserControlsSection(final int numControllers)",
    "Host.defineController(String vendor, String name, String version, String uuid)",
    "Host.defineSysexDiscovery(String request, String reply)",
    "Host.defineSysexIdentityReply(String reply)",
    "Host.scheduleTask(JSObject callback, Object[] args, long delay)",
    "MidiOut.setShouldSendMidiBeatClock(boolean shouldSendClock)",
    "Mixer.addClipLauncherSectionVisibilityObserver(final BooleanValueChangedCallback callback)",
    "Mixer.addCrossFadeSectionVisibilityObserver(final BooleanValueChangedCallback callback)",
    "Mixer.addDeviceSectionVisibilityObserver(final BooleanValueChangedCallback callback)",
    "Mixer.addIoSectionVisibilityObserver(final BooleanValueChangedCallback callback)",
    "Mixer.addMeterSectionVisibilityObserver(final BooleanValueChangedCallback callback)",
    "Mixer.addSendsSectionVisibilityObserver(final BooleanValueChangedCallback callback)",
    "Mixer.toggleClipLauncherSectionVisibility()",
    "Mixer.toggleCrossFadeSectionVisibility()",
    "Mixer.toggleDeviceSectionVisibility()",
    "Mixer.toggleIoSectionVisibility()",
    "Mixer.toggleMeterSectionVisibility()",
    "Mixer.toggleSendsSectionVisibility()",
    "ModulationSource.addIsMappedObserver(BooleanValueChangedCallback callback)",
    "ModulationSource.addIsMappingObserver(BooleanValueChangedCallback callback)",
    "ModulationSource.addNameObserver(int numChars, String textWhenUnassigned, StringValueChangedCallback callback)",
    "NoteLane.addColorObserver(ColorValueChangedCallback callback)",
    "NoteLane.addNameObserver(int numChars, String textWhenUnassigned, StringValueChangedCallback callback)",
    "NoteLane.addNoteValueObserver(IntegerValueChangedCallback callback)",
    "Parameter.addNameObserver(int maxChars, String textWhenUnassigned, StringValueChangedCallback callback)",
    "Parameter.addValueDisplayObserver(int maxChars, String textWhenUnassigned, StringValueChangedCallback callback)",
    "PrimaryDevice.addCanSwitchToDeviceObserver</a>  (<a class=\"el\" href=\"a00062.html\">DeviceType</a> deviceType, <a class=\"el\" href=\"a00027.html\">ChainLocationchainLocation, BooleanValueChangedCallback callback)",
    "Scene.addClipCountObserver(IntegerValueChangedCallback callback)",
    "Scene.addPositionObserver(IntegerValueChangedCallback callback)",
    "Scene.getName()",
    "SceneBank.addCanScrollDownObserver(BooleanValueChangedCallback callback)",
    "SceneBank.addCanScrollUpObserver(BooleanValueChangedCallback callback)",
    "SceneBank.addSceneCountObserver(IntegerValueChangedCallback callback)",
    "SceneBank.addScrollPositionObserver(IntegerValueChangedCallback callback, int valueWhenUnassigned)",
    "SceneBank.scrollDown()",
    "SceneBank.scrollPageDown()",
    "SceneBank.scrollPageUp()",
    "SceneBank.scrollTo(int position)",
    "SceneBank.scrollUp()",
    "SettableBeatTimeValue.incRaw(final double amount)",
    "SettableBeatTimeValue.setRaw(final double value)",
    "Track.addIsGroupObserver(BooleanValueChangedCallback callback)",
    "Track.addIsQueuedForStopObserver(BooleanValueChangedCallback callback)",
    "Track.addPositionObserver(IntegerValueChangedCallback callback)",
    "Track.addTrackTypeObserver(int numChars, String textWhenUnassigned, StringValueChangedCallback callback)",
    "Track.getClipLauncher()",
    "Track.getClipLauncherSlots()",
    "Track.getIsMatrixQueuedForStop()",
    "Track.getIsMatrixStopped()",
    "Track.getPrimaryDevice()",
    "Track.getPrimaryInstrument()",
    "TrackBank.addCanScrollScenesDownObserver(BooleanValueChangedCallback callback)",
    "TrackBank.addCanScrollScenesUpObserver(BooleanValueChangedCallback callback)",
    "TrackBank.addCanScrollTracksDownObserver(BooleanValueChangedCallback callback)",
    "TrackBank.addCanScrollTracksUpObserver(BooleanValueChangedCallback callback)",
    "TrackBank.addSceneCountObserver(IntegerValueChangedCallback callback)",
    "TrackBank.addTrackScrollPositionObserver(IntegerValueChangedCallback callback, int valueWhenUnassigned)",
    "TrackBank.getClipLauncherScenes()",
    "TrackBank.getTrack(int indexInBank)",
    "TrackBank.launchScene(int indexInWindow)",
    "TrackBank.scrollScenesPageUp()",
    "TrackBank.scrollToTrack(int position)",
    "TrackBank.scrollTracksDown()",
    "TrackBank.scrollTracksPageDown()",
    "TrackBank.scrollTracksPageUp()",
    "TrackBank.scrollTracksUp()",
    "TrackBank.setTrackScrollStepSize(int stepSize)",
    "Transport.addAutomationOverrideObserver(BooleanValueChangedCallback callback)",
    "Transport.addAutomationWriteModeObserver(EnumValueChangedCallback callback)",
    "Transport.addClickObserver(BooleanValueChangedCallback callback)",
    "Transport.addClipLauncherPostRecordingActionObserver(EnumValueChangedCallback callback)",
    "Transport.addIsLoopActiveObserver(BooleanValueChangedCallback callback)",
    "Transport.addIsPlayingObserver(BooleanValueChangedCallback callback)",
    "Transport.addIsRecordingObserver(BooleanValueChangedCallback callback)",
    "Transport.addIsWritingArrangerAutomationObserver(BooleanValueChangedCallback callback)",
    "Transport.addIsWritingClipLauncherAutomationObserver(BooleanValueChangedCallback callback)",
    "Transport.addLauncherOverdubObserver(BooleanValueChangedCallback callback)",
    "Transport.addMetronomeTicksObserver(BooleanValueChangedCallback callback)",
    "Transport.addMetronomeVolumeObserver(DoubleValueChangedCallback callback)",
    "Transport.addOverdubObserver(BooleanValueChangedCallback callback)",
    "Transport.addPreRollClickObserver(BooleanValueChangedCallback callback)",
    "Transport.addPreRollObserver(EnumValueChangedCallback callback)",
    "Transport.addPunchInObserver(BooleanValueChangedCallback callback)",
    "Transport.addPunchOutObserver(BooleanValueChangedCallback callback)",
    "Transport.getTempo()",
    "Transport.setAutomationWriteMode(String mode)",
    "Transport.setClick(boolean isEnabled)",
    "Transport.setClipLauncherPostRecordingAction(String action)",
    "Transport.setLauncherOverdub(boolean isEnabled)",
    "Transport.setLoop(boolean isEnabled)",
    "Transport.setMetronomeValue(Number amount, Number range)",
    "Transport.setOverdub(boolean isEnabled)",
    "Transport.setPreRoll(String value)",
    "Transport.toggleClick()",
    "Transport.toggleLauncherOverdub()",
    "Transport.toggleLoop()",
    "Transport.toggleMetronomeDuringPreRoll()",
    "Transport.toggleMetronomeTicks()",
    "Transport.toggleOverdub()",
    "Transport.togglePunchIn()",
    "Transport.togglePunchOut()"
  ]
}